#########################################################################################
1. List all courses offered by [university]

PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>

SELECT ?course
WHERE {
  ?course ns1:courseAt dbp:Concordia_University
}
#########################################################################################

#########################################################################################
2. In which courses is [topic] discussed?

PREFIX ns1: <http://example.org/>

SELECT ?courseTitle
WHERE {
  ?course a ns1:Course ;
          ns1:hasTitle ?courseTitle ;
          ns1:hasDescription ?description ;
          FILTER regex(?description, "financ", "i").
}
#########################################################################################

#########################################################################################
3. Which [topics] are covered in [course] during [lecture number]?

PREFIX ns1: <http://example.org/>

SELECT ?topic
WHERE {
  ?lecture a ns1:Lecture ;
           ns1:contentFor <http://example.org/COMP/472> ;
           ns1:contentNumber 1 ;
           ns1:topic ?topic .
}
#########################################################################################

#########################################################################################
4. List all [courses] offered by [university] within the [subject] (e.g., “COMP”, “SOEN”)

PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>

SELECT ?course
WHERE {
  ?course ns1:courseAt dbp:Concordia_University;
  		    ns1:hasCourseCode "COMP".
}
ORDER BY ?course
#########################################################################################

#########################################################################################
5. What [materials] (slides, readings) are recommended for [topic] in [course] [number]?

PREFIX ns1: <http://example.org/>

SELECT ?materialType ?materialName ?materialLink
WHERE {
  ?lecture a ns1:Lecture ;
           ns1:contentFor <http://example.org/COMP/472> ;
           ns1:topic "intro to ml naive bayes classification" ;
           ns1:contentName ?materialName ;
           ns1:contentLink ?materialLink .
  BIND("slides" AS ?materialType) .
}
#########################################################################################

#########################################################################################
6. How many credits is [course] [number] worth?

PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>

SELECT ?credits
WHERE {
	?course ns1:courseAt dbp:Concordia_University;
          ns1:hasCourseCode "COMP"; 
          ns1:hasCourseNumber "474";
          ns1:hasCredits ?credits.
}
#########################################################################################

#########################################################################################
7. For [course] [number], what additional resources (links to web pages) are available?

PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

SELECT ?course_code ?course_number ?website
WHERE {
  ?course ns1:courseAt dbp:Concordia_University;
          ns1:hasCourseCode ?course_code; 
          ns1:hasCourseNumber ?course_number;
          rdfs:seeAlso ?website.
  FILTER(?website != "No website provided" && ?website != "Contact faculty member directly to inquire about potential openings for a student working in the lab.")
}
#########################################################################################

#########################################################################################
8. Detail the content (slides, worksheets, readings) available for [lecture number] in [course] [number]

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX ns2: <http://ogp.me/ns#video:>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?course_code ?course_number ?course_file ?file_type ?file_path ?file_name ?week
WHERE {
	{ # select COMP472 and COMP474 
      SELECT ?course
      WHERE {
        ?course ns1:hasCourseCode "COMP";
                ns1:hasCourseNumber ?course_number.

        FILTER(?course_number = "472" || ?course_number = "474")	
      }
	}

  	# extract course code, number, and all the files associated with it
  	?course ns1:hasCourseCode ?course_code;
            ns1:hasCourseNumber ?course_number;
            ns1:contains ?course_file.
  	
  	# details of the files
  	?course_file rdf:type ?file_type;
                 ns1:contentLink ?file_path;
                 ns1:contentName ?file_name;
                 ns1:contentNumber ?week.
                 
  	FILTER(?week = 1 && ?course_number = '472')

}
ORDER BY ?course_code ?course_number ?week
#########################################################################################

#########################################################################################
9. What reading materials are recommended for studying [topic] in [course]

PREFIX ns1: <http://example.org/>

SELECT ?materialName ?materialLink  ?worksheetName ?worksheetLink
WHERE {
  ?lecture a ns1:Lecture ;
           ns1:contentFor <http://example.org/COMP/472> ;
           ns1:topic "decision trees k means clustering" ;
           ns1:contentNumber ?lectureNumber ;
           ns1:contentName ?materialName ;
           ns1:contentLink ?materialLink .
  OPTIONAL {
    ?worksheet a ns1:Worksheet ;
               ns1:contentFor <http://example.org/COMP/472> ;
               ns1:contentNumber ?worksheetNumber ;
               ns1:contentName ?worksheetName ;
               ns1:contentLink ?worksheetLink .
    FILTER (?worksheetNumber = (?lectureNumber - 1))
  }
}
#########################################################################################

#########################################################################################
10. What competencies [topics] does a student gain after completing [course] [number]?

PREFIX ns1: <http://example.org/>

SELECT DISTINCT ?topic
WHERE {
  ?lecture a ns1:Lecture ;
           ns1:contentFor <http://example.org/COMP/472> ;
           ns1:topic ?topic .
}
#########################################################################################

#########################################################################################
11. What grades did [student] achieve in [course] [number]?

PREFIX ns2: <http://ogp.me/ns#video:>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?id ?first_name ?last_name ?course_code ?course_number ?course_title ?course_desc ?course_credits ?course_website ?grade_val ?grade_status ?grade_comment
WHERE {
  { # select a random Concordia student and a random class that they're enrolled in 
    SELECT ?student ?course
    WHERE {
    	?student ns1:studiesAt dbp:Concordia_University;
                 ns1:isEnrolled ?course
    }
    ORDER BY RAND()
    LIMIT 1
  }
  
  # get the random student's info
  ?student ns1:hasId ?id;
           foaf:firstName ?first_name;
           foaf:lastName ?last_name.
  
  # get his grades
  ?grade ns1:gradeOf ?student;
         ns1:gradeFor ?course;
         ns1:hasGradeVal ?grade_val;
         ns1:gradeStatus ?grade_status;
         rdfs:comment ?grade_comment.

  # get the random course's info
  ?course ns1:hasCourseCode ?course_code;
          ns1:hasCourseNumber ?course_number;
          ns1:hasTitle ?course_title;
          ns1:hasDescription ?course_desc;
          ns1:hasCredits ?course_credits;
          rdfs:seeAlso ?course_website.
}
ORDER BY ?grade

#########################################################################################

#########################################################################################
12. Which [students] have completed [course] [number]?

PREFIX ns2: <http://ogp.me/ns#video:>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?id ?first_name ?last_name ?course_code ?course_number ?grade_val ?grade_status 
WHERE {
  { # extract course with the highest rate of enrolment 
    SELECT ?course ?course_code ?course_number (COUNT(*) AS ?count_course)
    WHERE {
        ?student ns1:hasId ?id ;
                 foaf:firstName ?first_name ;
                 foaf:lastName ?last_name ;
                 ns1:isEnrolled ?course .

        ?course ns1:hasCourseCode ?course_code ;
                ns1:hasCourseNumber ?course_number .
    }
    GROUP BY ?course ?course_code ?course_number
    ORDER BY DESC(?count_course)
    LIMIT 1
  }

  # extract all the grades for this course along with the students
  ?grade ns1:gradeOf ?student; 
         ns1:gradeFor ?course;
  	     ns1:hasGradeVal ?grade_val;
         ns1:gradeStatus ?grade_status.

  ?student ns1:hasId ?id;
           foaf:firstName ?first_name;
           foaf:lastName ?last_name.

  # extract all students that have passed the course 
  FILTER(?grade_status = "P")
}
#########################################################################################

#########################################################################################
13. Print a transcript for a [student], listing all the course taken with their grades

PREFIX ns2: <http://ogp.me/ns#video:>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ns1: <http://example.org/>
PREFIX dbp: <http://dbpedia.org/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>

SELECT ?id ?first_name ?last_name ?course_code ?course_number ?course_title ?course_desc ?course_credits ?course_website ?grade_val ?grade_status
WHERE {
  { # select a random student that goes to concordia 
    SELECT ?student 
    WHERE {
      ?student ns1:studiesAt dbp:Concordia_University
    }
    ORDER BY RAND()
    LIMIT 1
  }
  # get the random student's info 
  ?student ns1:hasId ?id;
           foaf:firstName ?first_name;
           foaf:lastName ?last_name.

  # get his grades
  ?grade ns1:gradeOf ?student;
         ns1:gradeFor ?course;
         ns1:hasGradeVal ?grade_val;
         ns1:gradeStatus ?grade_status.

  # get his courses
  ?course ns1:hasCourseCode ?course_code;
          ns1:hasCourseNumber ?course_number;
          ns1:hasTitle ?course_title;
          ns1:hasDescription ?course_desc;
          ns1:hasCredits ?course_credits;
          rdfs:seeAlso ?course_website.
}
#########################################################################################